{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","context","handleFromCurrencyChange","event","setState","fromCurrency","target","value","handleFromValueChange","fromValue","handleToCurrencyChange","toCurrency","handleSubmit","exchangeRateForSourceCurrency","state","exchangeRate","mid","exchangeRateForTargetCurrency","toValue","preventDefault","currencies","currency","code","fetch","then","res","json","result","rates","forEach","rate","push","error","console","log","className","id","onSubmit","this","type","onChange","title","map","toFixed","disabled","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAsGeA,E,kDAlGX,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAoCjBC,yBAA2B,SAACC,GACxB,EAAKC,SAAS,CAACC,aAAcF,EAAMG,OAAOC,SAtClB,EAyC5BC,sBAAwB,SAACL,GACrB,EAAKC,SAAS,CAACK,UAAWN,EAAMG,OAAOC,SA1Cf,EA6C5BG,uBAAyB,SAACP,GACtB,EAAKC,SAAS,CAACO,WAAYR,EAAMG,OAAOC,SA9ChB,EAiD5BK,aAAe,SAACT,GACZ,IAAIU,EAAgC,EAAKC,MAAMC,aAAa,EAAKD,MAAMT,cAAcW,IACjFC,EAAgC,EAAKH,MAAMC,aAAa,EAAKD,MAAMH,YAAYK,IACnF,EAAKZ,SAAS,CAACc,QAAS,EAAKJ,MAAML,UAAYI,EAAgCI,IAC/Ed,EAAMgB,kBAlDN,EAAKL,MAAQ,CACTM,WAAY,CAAC,OACbX,UAAW,EACXJ,aAAc,MACdM,WAAY,MACZO,QAAS,EACTH,aAAc,CACV,IAAO,CAACC,IAAK,EAAGK,SAAU,oBAAgBC,KAAM,SAVhC,E,qDAe5B,WAAqB,IAAD,OAChBC,MAAM,6DACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,IAAIZ,EAAe,CAAC,IAAO,CAACC,IAAK,EAAGK,SAAU,oBAAgBC,KAAM,QAChEF,EAAa,CAAC,OAClBO,EAAO,GAAGC,MAAMC,SAAQ,SAAAC,GACpBf,EAAae,EAAKR,MAAQQ,EAC1BV,EAAWW,KAAKD,EAAKR,SAEzB,EAAKlB,SAAS,CACVgB,aACAL,oBAGR,SAACiB,GACGC,QAAQC,IAAIF,Q,oBAwB5B,WAAU,IAAD,OACL,OAAO,sBAAKG,UAAU,iBAAf,UACH,mDACA,uBAAMC,GAAG,eAAeC,SAAUC,KAAK1B,aAAvC,UACI,uBAAO2B,KAAK,OACLhC,MAAO+B,KAAKxB,MAAML,UAClB+B,SAAUF,KAAK9B,wBACtB,wBAAQD,MAAO+B,KAAKxB,MAAMT,aAClBmC,SAAUF,KAAKpC,yBACfuC,MAAOH,KAAKxB,MAAMC,aAAauB,KAAKxB,MAAMT,cAAcgB,SAFhE,SAGKiB,KAAKxB,MAAMM,WAAWsB,KACnB,SAAArB,GAAQ,OACJ,wBACQd,MAAOc,EACPoB,MAAO,EAAK3B,MAAMC,aAAaM,GAAUA,SAFjD,SAGKA,GAHQA,QAOzB,uBAAOkB,KAAK,SAAShC,MAAM,aAC3B,uBAAOgC,KAAK,OACLhC,MAAO+B,KAAKxB,MAAMI,QAAQyB,QAAQ,GAClCC,UAAU,EACVH,MAAOH,KAAKxB,MAAMC,aAAauB,KAAKxB,MAAMH,YAAYU,WAC7D,wBAAQd,MAAO+B,KAAKxB,MAAMH,WAClB6B,SAAUF,KAAK5B,uBACf+B,MAAOH,KAAKxB,MAAMC,aAAauB,KAAKxB,MAAMH,YAAYU,SAF9D,SAGKiB,KAAKxB,MAAMM,WAAWsB,KACnB,SAAArB,GAAQ,OACJ,wBACQd,MAAOc,EACPoB,MAAO,EAAK3B,MAAMC,aAAaM,GAAUA,SAFjD,SAGKA,GAHQA,kB,GAtFvBwB,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e99bc4e6.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\n\nclass App extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            currencies: [\"PLN\"],\n            fromValue: 1,\n            fromCurrency: \"PLN\",\n            toCurrency: \"PLN\",\n            toValue: 1,\n            exchangeRate: {\n                \"PLN\": {mid: 1, currency: \"polski złoty\", code: \"PLN\"}\n            }\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.nbp.pl/api/exchangerates/tables/A?format=json\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let exchangeRate = {\"PLN\": {mid: 1, currency: \"polski złoty\", code: \"PLN\"}};\n                    let currencies = [\"PLN\"];\n                    result[0].rates.forEach(rate => {\n                        exchangeRate[rate.code] = rate;\n                        currencies.push(rate.code);\n                    })\n                    this.setState({\n                        currencies,\n                        exchangeRate\n                    })\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    handleFromCurrencyChange = (event) => {\n        this.setState({fromCurrency: event.target.value});\n    }\n\n    handleFromValueChange = (event) => {\n        this.setState({fromValue: event.target.value});\n    }\n\n    handleToCurrencyChange = (event) => {\n        this.setState({toCurrency: event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        let exchangeRateForSourceCurrency = this.state.exchangeRate[this.state.fromCurrency].mid;\n        let exchangeRateForTargetCurrency = this.state.exchangeRate[this.state.toCurrency].mid;\n        this.setState({toValue: this.state.fromValue * exchangeRateForSourceCurrency / exchangeRateForTargetCurrency});\n        event.preventDefault();\n    }\n\n    render() {\n        return <div className=\"App App-header\">\n            <h1>Przelicznik walut</h1>\n            <form id=\"exchangeForm\" onSubmit={this.handleSubmit}>\n                <input type=\"text\"\n                       value={this.state.fromValue}\n                       onChange={this.handleFromValueChange}/>\n                <select value={this.state.fromCurrency}\n                        onChange={this.handleFromCurrencyChange}\n                        title={this.state.exchangeRate[this.state.fromCurrency].currency}>\n                    {this.state.currencies.map(\n                        currency =>\n                            <option key={currency}\n                                    value={currency}\n                                    title={this.state.exchangeRate[currency].currency}>\n                                {currency}\n                            </option>\n                    )}\n                </select>\n                <input type=\"submit\" value=\"Przelicz\"/>\n                <input type=\"text\"\n                       value={this.state.toValue.toFixed(2)}\n                       disabled={true}\n                       title={this.state.exchangeRate[this.state.toCurrency].currency}/>\n                <select value={this.state.toCurrency}\n                        onChange={this.handleToCurrencyChange}\n                        title={this.state.exchangeRate[this.state.toCurrency].currency}>\n                    {this.state.currencies.map(\n                        currency =>\n                            <option key={currency}\n                                    value={currency}\n                                    title={this.state.exchangeRate[currency].currency}>\n                                {currency}\n                            </option>\n                    )}\n                </select>\n            </form>\n        </div>\n    }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}